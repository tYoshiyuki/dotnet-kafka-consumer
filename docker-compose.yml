services:
  kafka:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "39092:39092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # PLAINTEXT_INTERNAL -> kafka-ui用、EXTERNAL -> .NETアプリケーション接続用 (※ ローカル接続用に全IPアドレスからのアクセスを許可)
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093,PLAINTEXT_INTERNAL://broker:29092,EXTERNAL://0.0.0.0:39092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092,EXTERNAL://localhost:39092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kraft-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092
    depends_on:
      - kafka
  
  kafka-topic-creator:
    image: apache/kafka:latest
    container_name: kafka-topic-creator
    depends_on:
      - kafka
    command:
      - "sh"
      - "-c"
      - |
        echo "Waiting for Kafka to be fully ready for topic creation..."
        sleep 5

        echo "Creating Kafka topics..."
        # トピック 'my-topic' を作成
        /opt/kafka/bin/kafka-topics.sh --bootstrap-server broker:29092 --create --topic my-topic --partitions 1 --replication-factor 1 --if-not-exists        
        echo "Topic creation complete."